{"ast":null,"code":"import _objectSpread from\"/Users/michaelhanna/Documents/DEV/INZAN/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Wifi,Bell,Settings as SettingsIcon,Save,TestTube,Play,Square,Trash2,Copy,MessageCircle}from'lucide-react';import{useSocket}from'../contexts/SocketContext';import axios from'axios';import DashboardHeader from'../components/DashboardHeader';import DashboardCard from'../components/DashboardCard';import Input from'../components/Input';import Button from'../components/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const{socket,isConnected}=useSocket();const[mqttConfig,setMqttConfig]=useState({host:'localhost',port:1883,username:'',password:'',clientId:'gym-admin'});const[notifications,setNotifications]=useState({emailAlerts:true,usageReports:false,realTimeUpdates:true});const[systemSettings,setSystemSettings]=useState({autoRefresh:30,dataRetention:90,backupEnabled:true,debugMode:false});// MQTT Listener state\nconst[mqttListener,setMqttListener]=useState({topic:'#',isListening:false,messages:[],maxMessages:100});const[loading,setLoading]=useState(false);const[saved,setSaved]=useState(false);useEffect(()=>{// Load settings from API\nconst loadSettings=async()=>{try{const response=await axios.get('/api/settings');const settings=response.data;if(settings.mqttConfig){setMqttConfig(settings.mqttConfig);}if(settings.notifications){setNotifications(settings.notifications);}if(settings.systemSettings){setSystemSettings(settings.systemSettings);}console.log('⚙️ Settings loaded from API:',settings);}catch(error){console.error('❌ Failed to load settings from API:',error);// Fallback to localStorage if API fails\nconst savedMqtt=localStorage.getItem('mqttConfig');const savedNotifications=localStorage.getItem('notifications');const savedSystem=localStorage.getItem('systemSettings');const savedMqttListener=localStorage.getItem('mqttListener');if(savedMqtt)setMqttConfig(JSON.parse(savedMqtt));if(savedNotifications)setNotifications(JSON.parse(savedNotifications));if(savedSystem)setSystemSettings(JSON.parse(savedSystem));if(savedMqttListener)setMqttListener(prev=>_objectSpread(_objectSpread(_objectSpread({},prev),JSON.parse(savedMqttListener)),{},{messages:[],isListening:false}));}};loadSettings();},[]);// MQTT message listener\nuseEffect(()=>{if(!socket){console.log('🔌 Socket not available for MQTT listener');return;}console.log('🎧 Setting up MQTT listener...',{isListening:mqttListener.isListening,topic:mqttListener.topic,socketConnected:socket.connected});const handleMqttMessage=data=>{console.log('📨 Received MQTT message:',data);// Check if the message topic matches the listener topic pattern\nconst topicMatches=(pattern,topic)=>{if(pattern==='#')return true;if(pattern===topic)return true;// Handle wildcards\nconst patternParts=pattern.split('/');const topicParts=topic.split('/');for(let i=0;i<patternParts.length;i++){if(patternParts[i]==='#')return true;if(patternParts[i]==='+')continue;if(patternParts[i]!==topicParts[i])return false;}return patternParts.length===topicParts.length;};const matches=topicMatches(mqttListener.topic,data.topic);console.log('🔍 Topic match check:',{pattern:mqttListener.topic,topic:data.topic,matches});if(matches){const newMessage={id:Date.now()+Math.random(),timestamp:new Date().toLocaleTimeString(),topic:data.topic,payload:data.payload,rawPayload:JSON.stringify(data.payload,null,2)};console.log('✅ Adding message to list:',newMessage);// Only add message if currently listening\nsetMqttListener(prev=>{if(!prev.isListening){console.log('🚫 Not listening, ignoring message');return prev;}return _objectSpread(_objectSpread({},prev),{},{messages:[newMessage,...prev.messages].slice(0,prev.maxMessages)});});}};const handleTestResponse=data=>{console.log('🧪 Received test response:',data);alert(\"\\u2705 Socket.IO test successful!\\nServer response: \".concat(data.message,\"\\nClient ID: \").concat(data.clientId));};socket.on('mqtt-message',handleMqttMessage);socket.on('test-response',handleTestResponse);console.log('🔗 MQTT message listener registered');return()=>{console.log('🔌 Cleaning up MQTT message listener');socket.off('mqtt-message',handleMqttMessage);socket.off('test-response',handleTestResponse);};},[socket,mqttListener.topic,mqttListener.maxMessages,mqttListener.isListening]);// Include necessary dependencies\nconst handleSave=async()=>{setLoading(true);try{// Save to API\nconst response=await axios.post('/api/settings',{mqttConfig,notifications,systemSettings,mqttListener});if(response.data.success){console.log('✅ Settings saved to API:',response.data);// Also save to localStorage as backup\nlocalStorage.setItem('mqttConfig',JSON.stringify(mqttConfig));localStorage.setItem('notifications',JSON.stringify(notifications));localStorage.setItem('systemSettings',JSON.stringify(systemSettings));localStorage.setItem('mqttListener',JSON.stringify({topic:mqttListener.topic,maxMessages:mqttListener.maxMessages}));setSaved(true);setTimeout(()=>setSaved(false),3000);}else{throw new Error(response.data.message||'Failed to save settings');}}catch(error){console.error('❌ Error saving settings to API:',error);// Fallback to localStorage only\ntry{localStorage.setItem('mqttConfig',JSON.stringify(mqttConfig));localStorage.setItem('notifications',JSON.stringify(notifications));localStorage.setItem('systemSettings',JSON.stringify(systemSettings));localStorage.setItem('mqttListener',JSON.stringify({topic:mqttListener.topic,maxMessages:mqttListener.maxMessages}));alert('⚠️ Settings saved to local storage only. Server connection failed.');setSaved(true);setTimeout(()=>setSaved(false),3000);}catch(localError){console.error('❌ Failed to save to localStorage:',localError);alert('❌ Failed to save settings. Please try again.');}}finally{setLoading(false);}};const startMqttListener=()=>{console.log('🚀 Starting MQTT listener...',{topic:mqttListener.topic,maxMessages:mqttListener.maxMessages,socketConnected:isConnected});setMqttListener(prev=>_objectSpread(_objectSpread({},prev),{},{isListening:true,messages:[]}));};const stopMqttListener=()=>{console.log('🛑 Stopping MQTT listener...');setMqttListener(prev=>_objectSpread(_objectSpread({},prev),{},{isListening:false}));};const clearMqttMessages=()=>{console.log('🗑️ Clearing MQTT messages...');setMqttListener(prev=>_objectSpread(_objectSpread({},prev),{},{messages:[]}));};const copyMessageToClipboard=message=>{const text=\"Topic: \".concat(message.topic,\"\\nTimestamp: \").concat(message.timestamp,\"\\nPayload:\\n\").concat(message.rawPayload);navigator.clipboard.writeText(text).then(()=>{// Could show a toast notification here\n});};const testMqttConnection=async()=>{try{await axios.post('/api/test-mqtt',mqttConfig);alert('MQTT connection test successful!');}catch(error){alert('MQTT connection test failed. Please check your configuration.');}};const testSocketConnection=()=>{if(socket&&socket.connected){console.log('🧪 Testing Socket.IO connection...');// Send a test message to server to verify connection\nsocket.emit('test-message',{test:'Hello from frontend!'});alert('Test message sent! Check console for responses.');}else{alert('Socket.IO not connected!');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(DashboardHeader,{title:\"Settings\",subtitle:\"Configure system preferences and MQTT connection\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(DashboardCard,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(Wifi,{className:\"w-6 h-6 text-cyan-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"MQTT Configuration\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"MQTT Broker Host\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:mqttConfig.host,onChange:e=>setMqttConfig(_objectSpread(_objectSpread({},mqttConfig),{},{host:e.target.value})),placeholder:\"localhost\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"MQTT Broker Port\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:mqttConfig.port,onChange:e=>setMqttConfig(_objectSpread(_objectSpread({},mqttConfig),{},{port:parseInt(e.target.value)})),placeholder:\"1883\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Username (optional)\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:mqttConfig.username,onChange:e=>setMqttConfig(_objectSpread(_objectSpread({},mqttConfig),{},{username:e.target.value})),placeholder:\"mqtt_username\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Password (optional)\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",value:mqttConfig.password,onChange:e=>setMqttConfig(_objectSpread(_objectSpread({},mqttConfig),{},{password:e.target.value})),placeholder:\"mqtt_password\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Client ID\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:mqttConfig.clientId,onChange:e=>setMqttConfig(_objectSpread(_objectSpread({},mqttConfig),{},{clientId:e.target.value})),placeholder:\"gym-admin\"})]}),/*#__PURE__*/_jsxs(Button,{variant:\"secondary\",className:\"w-full flex items-center justify-center space-x-2\",onClick:testMqttConnection,children:[/*#__PURE__*/_jsx(TestTube,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Test Connection\"})]})]})]}),/*#__PURE__*/_jsxs(DashboardCard,{className:\"lg:col-span-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-6 h-6 text-cyan-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"MQTT Message Listener\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Topic to Monitor\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:mqttListener.topic,onChange:e=>setMqttListener(prev=>_objectSpread(_objectSpread({},prev),{},{topic:e.target.value})),placeholder:\"# (all topics)\",disabled:mqttListener.isListening}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200 mt-1\",children:\"Use # for all topics, + for single level wildcard, or specific topic\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Max Messages\"}),/*#__PURE__*/_jsxs(\"select\",{value:mqttListener.maxMessages,onChange:e=>setMqttListener(prev=>_objectSpread(_objectSpread({},prev),{},{maxMessages:parseInt(e.target.value)})),className:\"input\",disabled:mqttListener.isListening,children:[/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50 messages\"}),/*#__PURE__*/_jsx(\"option\",{value:100,children:\"100 messages\"}),/*#__PURE__*/_jsx(\"option\",{value:200,children:\"200 messages\"}),/*#__PURE__*/_jsx(\"option\",{value:500,children:\"500 messages\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[!mqttListener.isListening?/*#__PURE__*/_jsxs(Button,{variant:\"primary\",className:\"flex items-center space-x-2 flex-1 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:startMqttListener,disabled:!isConnected,children:[/*#__PURE__*/_jsx(Play,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Start Listening\"})]}):/*#__PURE__*/_jsxs(Button,{variant:\"secondary\",className:\"flex items-center space-x-2 flex-1\",onClick:stopMqttListener,children:[/*#__PURE__*/_jsx(Square,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Stop Listening\"})]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",onClick:clearMqttMessages,children:[/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Clear\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-2\",children:/*#__PURE__*/_jsxs(Button,{variant:\"outline\",className:\"w-full flex items-center justify-center space-x-2 text-sm\",onClick:testSocketConnection,children:[/*#__PURE__*/_jsx(TestTube,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Test Socket Connection\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full \".concat(isConnected?'bg-green-500':'bg-red-500')}),/*#__PURE__*/_jsx(\"span\",{className:isConnected?'text-green-600':'text-red-600',children:isConnected?'Connected':'Disconnected'})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 border rounded-lg h-96 overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-3 border-b bg-gray-100\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700\",children:\"Received Messages\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-full overflow-y-auto p-3 space-y-2\",children:mqttListener.messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-500 mt-8\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-8 h-8 mx-auto mb-2 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No messages received yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs\",children:\"Start listening to see MQTT messages\"})]}):mqttListener.messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded p-3 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-gray-900 truncate\",children:message.topic}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:message.timestamp})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyMessageToClipboard(message),className:\"ml-2 p-1 text-gray-400 hover:text-gray-600 flex-shrink-0\",title:\"Copy to clipboard\",children:/*#__PURE__*/_jsx(Copy,{className:\"w-4 h-4\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 rounded p-2 overflow-x-auto\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"text-xs text-gray-700 whitespace-pre-wrap\",children:message.rawPayload})})]},message.id))})]})})]})]}),/*#__PURE__*/_jsxs(DashboardCard,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(Bell,{className:\"w-6 h-6 text-cyan-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"Notifications\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Email Alerts\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Receive email notifications for important events\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notifications.emailAlerts,onChange:e=>setNotifications(_objectSpread(_objectSpread({},notifications),{},{emailAlerts:e.target.checked})),className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Usage Reports\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Weekly usage summary reports\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notifications.usageReports,onChange:e=>setNotifications(_objectSpread(_objectSpread({},notifications),{},{usageReports:e.target.checked})),className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Real-time Updates\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Live updates via WebSocket\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notifications.realTimeUpdates,onChange:e=>setNotifications(_objectSpread(_objectSpread({},notifications),{},{realTimeUpdates:e.target.checked})),className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]})]})]}),/*#__PURE__*/_jsxs(DashboardCard,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(SettingsIcon,{className:\"w-6 h-6 text-cyan-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"System Settings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Auto Refresh Interval (seconds)\"}),/*#__PURE__*/_jsxs(\"select\",{value:systemSettings.autoRefresh,onChange:e=>setSystemSettings(_objectSpread(_objectSpread({},systemSettings),{},{autoRefresh:parseInt(e.target.value)})),className:\"input\",children:[/*#__PURE__*/_jsx(\"option\",{value:15,children:\"15 seconds\"}),/*#__PURE__*/_jsx(\"option\",{value:30,children:\"30 seconds\"}),/*#__PURE__*/_jsx(\"option\",{value:60,children:\"1 minute\"}),/*#__PURE__*/_jsx(\"option\",{value:300,children:\"5 minutes\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Data Retention (days)\"}),/*#__PURE__*/_jsxs(\"select\",{value:systemSettings.dataRetention,onChange:e=>setSystemSettings(_objectSpread(_objectSpread({},systemSettings),{},{dataRetention:parseInt(e.target.value)})),className:\"input\",children:[/*#__PURE__*/_jsx(\"option\",{value:30,children:\"30 days\"}),/*#__PURE__*/_jsx(\"option\",{value:60,children:\"60 days\"}),/*#__PURE__*/_jsx(\"option\",{value:90,children:\"90 days\"}),/*#__PURE__*/_jsx(\"option\",{value:365,children:\"1 year\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Automatic Backups\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Daily backup of system data\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:systemSettings.backupEnabled,onChange:e=>setSystemSettings(_objectSpread(_objectSpread({},systemSettings),{},{backupEnabled:e.target.checked})),className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Debug Mode\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Enable detailed logging\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:systemSettings.debugMode,onChange:e=>setSystemSettings(_objectSpread(_objectSpread({},systemSettings),{},{debugMode:e.target.checked})),className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]})]})]}),/*#__PURE__*/_jsxs(DashboardCard,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-6 h-6 text-cyan-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"Security\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Session Timeout (minutes)\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"input\",children:[/*#__PURE__*/_jsx(\"option\",{value:15,children:\"15 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:30,children:\"30 minutes\"}),/*#__PURE__*/_jsx(\"option\",{value:60,children:\"1 hour\"}),/*#__PURE__*/_jsx(\"option\",{value:480,children:\"8 hours\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-cyan-200 mb-1\",children:\"Password Policy\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"standard\",children:\"Standard (8+ characters)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"strong\",children:\"Strong (12+ characters, symbols)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"enterprise\",children:\"Enterprise (16+ characters, complex)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Two-Factor Authentication\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Require 2FA for admin access\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"sr-only peer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-white\",children:\"Audit Logging\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-cyan-200\",children:\"Log all admin actions\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"relative inline-flex items-center cursor-pointer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"sr-only peer\",defaultChecked:true}),/*#__PURE__*/_jsx(\"div\",{className:\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 flex justify-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:handleSave,disabled:loading,children:[loading?/*#__PURE__*/_jsx(TestTube,{className:\"w-4 h-4 animate-spin\"}):/*#__PURE__*/_jsx(Save,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:loading?'Saving...':saved?'Saved!':'Save Settings'})]})})]});};export default Settings;","map":{"version":3,"names":["React","useState","useEffect","Wifi","Bell","Settings","SettingsIcon","Save","TestTube","Play","Square","Trash2","Copy","MessageCircle","useSocket","axios","DashboardHeader","DashboardCard","Input","Button","jsx","_jsx","jsxs","_jsxs","socket","isConnected","mqttConfig","setMqttConfig","host","port","username","password","clientId","notifications","setNotifications","emailAlerts","usageReports","realTimeUpdates","systemSettings","setSystemSettings","autoRefresh","dataRetention","backupEnabled","debugMode","mqttListener","setMqttListener","topic","isListening","messages","maxMessages","loading","setLoading","saved","setSaved","loadSettings","response","get","settings","data","console","log","error","savedMqtt","localStorage","getItem","savedNotifications","savedSystem","savedMqttListener","JSON","parse","prev","_objectSpread","socketConnected","connected","handleMqttMessage","topicMatches","pattern","patternParts","split","topicParts","i","length","matches","newMessage","id","Date","now","Math","random","timestamp","toLocaleTimeString","payload","rawPayload","stringify","slice","handleTestResponse","alert","concat","message","on","off","handleSave","post","success","setItem","setTimeout","Error","localError","startMqttListener","stopMqttListener","clearMqttMessages","copyMessageToClipboard","text","navigator","clipboard","writeText","then","testMqttConnection","testSocketConnection","emit","test","className","children","title","subtitle","type","value","onChange","e","target","placeholder","parseInt","variant","onClick","disabled","map","checked","defaultChecked"],"sources":["/Users/michaelhanna/Documents/DEV/INZAN/client/src/pages/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Wifi, \n  Bell, \n  Settings as SettingsIcon, \n  Save, \n  TestTube, \n  Play, \n  Square, \n  Trash2, \n  Copy, \n  MessageCircle \n} from 'lucide-react';\nimport { useSocket } from '../contexts/SocketContext';\nimport axios from 'axios';\nimport DashboardHeader from '../components/DashboardHeader';\nimport DashboardCard from '../components/DashboardCard';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nconst Settings = () => {\n  const { socket, isConnected } = useSocket();\n  \n  const [mqttConfig, setMqttConfig] = useState({\n    host: 'localhost',\n    port: 1883,\n    username: '',\n    password: '',\n    clientId: 'gym-admin'\n  });\n  \n  const [notifications, setNotifications] = useState({\n    emailAlerts: true,\n    usageReports: false,\n    realTimeUpdates: true\n  });\n  \n  const [systemSettings, setSystemSettings] = useState({\n    autoRefresh: 30,\n    dataRetention: 90,\n    backupEnabled: true,\n    debugMode: false\n  });\n\n  // MQTT Listener state\n  const [mqttListener, setMqttListener] = useState({\n    topic: '#',\n    isListening: false,\n    messages: [],\n    maxMessages: 100\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  useEffect(() => {\n    // Load settings from API\n    const loadSettings = async () => {\n      try {\n        const response = await axios.get('/api/settings');\n        const settings = response.data;\n        \n        if (settings.mqttConfig) {\n          setMqttConfig(settings.mqttConfig);\n        }\n        if (settings.notifications) {\n          setNotifications(settings.notifications);\n        }\n        if (settings.systemSettings) {\n          setSystemSettings(settings.systemSettings);\n        }\n        \n        console.log('⚙️ Settings loaded from API:', settings);\n      } catch (error) {\n        console.error('❌ Failed to load settings from API:', error);\n        \n        // Fallback to localStorage if API fails\n        const savedMqtt = localStorage.getItem('mqttConfig');\n        const savedNotifications = localStorage.getItem('notifications');\n        const savedSystem = localStorage.getItem('systemSettings');\n        const savedMqttListener = localStorage.getItem('mqttListener');\n\n        if (savedMqtt) setMqttConfig(JSON.parse(savedMqtt));\n        if (savedNotifications) setNotifications(JSON.parse(savedNotifications));\n        if (savedSystem) setSystemSettings(JSON.parse(savedSystem));\n        if (savedMqttListener) setMqttListener(prev => ({ ...prev, ...JSON.parse(savedMqttListener), messages: [], isListening: false }));\n      }\n    };\n\n    loadSettings();\n  }, []);\n\n  // MQTT message listener\n  useEffect(() => {\n    if (!socket) {\n      console.log('🔌 Socket not available for MQTT listener');\n      return;\n    }\n\n    console.log('🎧 Setting up MQTT listener...', { \n      isListening: mqttListener.isListening, \n      topic: mqttListener.topic,\n      socketConnected: socket.connected \n    });\n\n    const handleMqttMessage = (data) => {\n      console.log('📨 Received MQTT message:', data);\n      \n      // Check if the message topic matches the listener topic pattern\n      const topicMatches = (pattern, topic) => {\n        if (pattern === '#') return true;\n        if (pattern === topic) return true;\n        \n        // Handle wildcards\n        const patternParts = pattern.split('/');\n        const topicParts = topic.split('/');\n        \n        for (let i = 0; i < patternParts.length; i++) {\n          if (patternParts[i] === '#') return true;\n          if (patternParts[i] === '+') continue;\n          if (patternParts[i] !== topicParts[i]) return false;\n        }\n        \n        return patternParts.length === topicParts.length;\n      };\n\n      const matches = topicMatches(mqttListener.topic, data.topic);\n      console.log('🔍 Topic match check:', { \n        pattern: mqttListener.topic, \n        topic: data.topic, \n        matches \n      });\n\n      if (matches) {\n        const newMessage = {\n          id: Date.now() + Math.random(),\n          timestamp: new Date().toLocaleTimeString(),\n          topic: data.topic,\n          payload: data.payload,\n          rawPayload: JSON.stringify(data.payload, null, 2)\n        };\n\n        console.log('✅ Adding message to list:', newMessage);\n\n        // Only add message if currently listening\n        setMqttListener(prev => {\n          if (!prev.isListening) {\n            console.log('🚫 Not listening, ignoring message');\n            return prev;\n          }\n          \n          return {\n            ...prev,\n            messages: [newMessage, ...prev.messages].slice(0, prev.maxMessages)\n          };\n        });\n      }\n    };\n\n    const handleTestResponse = (data) => {\n      console.log('🧪 Received test response:', data);\n      alert(`✅ Socket.IO test successful!\\nServer response: ${data.message}\\nClient ID: ${data.clientId}`);\n    };\n\n    socket.on('mqtt-message', handleMqttMessage);\n    socket.on('test-response', handleTestResponse);\n    console.log('🔗 MQTT message listener registered');\n\n    return () => {\n      console.log('🔌 Cleaning up MQTT message listener');\n      socket.off('mqtt-message', handleMqttMessage);\n      socket.off('test-response', handleTestResponse);\n    };\n  }, [socket, mqttListener.topic, mqttListener.maxMessages, mqttListener.isListening]); // Include necessary dependencies\n\n  const handleSave = async () => {\n    setLoading(true);\n    try {\n      // Save to API\n      const response = await axios.post('/api/settings', { mqttConfig, notifications, systemSettings, mqttListener });\n      \n      if (response.data.success) {\n        console.log('✅ Settings saved to API:', response.data);\n        \n        // Also save to localStorage as backup\n        localStorage.setItem('mqttConfig', JSON.stringify(mqttConfig));\n        localStorage.setItem('notifications', JSON.stringify(notifications));\n        localStorage.setItem('systemSettings', JSON.stringify(systemSettings));\n        localStorage.setItem('mqttListener', JSON.stringify({\n          topic: mqttListener.topic,\n          maxMessages: mqttListener.maxMessages\n        }));\n        \n        setSaved(true);\n        setTimeout(() => setSaved(false), 3000);\n      } else {\n        throw new Error(response.data.message || 'Failed to save settings');\n      }\n    } catch (error) {\n      console.error('❌ Error saving settings to API:', error);\n      \n      // Fallback to localStorage only\n      try {\n        localStorage.setItem('mqttConfig', JSON.stringify(mqttConfig));\n        localStorage.setItem('notifications', JSON.stringify(notifications));\n        localStorage.setItem('systemSettings', JSON.stringify(systemSettings));\n        localStorage.setItem('mqttListener', JSON.stringify({\n          topic: mqttListener.topic,\n          maxMessages: mqttListener.maxMessages\n        }));\n        \n        alert('⚠️ Settings saved to local storage only. Server connection failed.');\n        setSaved(true);\n        setTimeout(() => setSaved(false), 3000);\n      } catch (localError) {\n        console.error('❌ Failed to save to localStorage:', localError);\n        alert('❌ Failed to save settings. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startMqttListener = () => {\n    console.log('🚀 Starting MQTT listener...', { \n      topic: mqttListener.topic, \n      maxMessages: mqttListener.maxMessages,\n      socketConnected: isConnected \n    });\n    setMqttListener(prev => ({ ...prev, isListening: true, messages: [] }));\n  };\n\n  const stopMqttListener = () => {\n    console.log('🛑 Stopping MQTT listener...');\n    setMqttListener(prev => ({ ...prev, isListening: false }));\n  };\n\n  const clearMqttMessages = () => {\n    console.log('🗑️ Clearing MQTT messages...');\n    setMqttListener(prev => ({ ...prev, messages: [] }));\n  };\n\n  const copyMessageToClipboard = (message) => {\n    const text = `Topic: ${message.topic}\\nTimestamp: ${message.timestamp}\\nPayload:\\n${message.rawPayload}`;\n    navigator.clipboard.writeText(text).then(() => {\n      // Could show a toast notification here\n    });\n  };\n\n  const testMqttConnection = async () => {\n    try {\n      await axios.post('/api/test-mqtt', mqttConfig);\n      alert('MQTT connection test successful!');\n    } catch (error) {\n      alert('MQTT connection test failed. Please check your configuration.');\n    }\n  };\n\n  const testSocketConnection = () => {\n    if (socket && socket.connected) {\n      console.log('🧪 Testing Socket.IO connection...');\n      // Send a test message to server to verify connection\n      socket.emit('test-message', { test: 'Hello from frontend!' });\n      alert('Test message sent! Check console for responses.');\n    } else {\n      alert('Socket.IO not connected!');\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <DashboardHeader title=\"Settings\" subtitle=\"Configure system preferences and MQTT connection\" />\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* MQTT Configuration */}\n        <DashboardCard>\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <Wifi className=\"w-6 h-6 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">MQTT Configuration</h3>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                MQTT Broker Host\n              </label>\n              <Input\n                type=\"text\"\n                value={mqttConfig.host}\n                onChange={(e) => setMqttConfig({ ...mqttConfig, host: e.target.value })}\n                placeholder=\"localhost\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                MQTT Broker Port\n              </label>\n              <Input\n                type=\"number\"\n                value={mqttConfig.port}\n                onChange={(e) => setMqttConfig({ ...mqttConfig, port: parseInt(e.target.value) })}\n                placeholder=\"1883\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Username (optional)\n              </label>\n              <Input\n                type=\"text\"\n                value={mqttConfig.username}\n                onChange={(e) => setMqttConfig({ ...mqttConfig, username: e.target.value })}\n                placeholder=\"mqtt_username\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Password (optional)\n              </label>\n              <Input\n                type=\"password\"\n                value={mqttConfig.password}\n                onChange={(e) => setMqttConfig({ ...mqttConfig, password: e.target.value })}\n                placeholder=\"mqtt_password\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Client ID\n              </label>\n              <Input\n                type=\"text\"\n                value={mqttConfig.clientId}\n                onChange={(e) => setMqttConfig({ ...mqttConfig, clientId: e.target.value })}\n                placeholder=\"gym-admin\"\n              />\n            </div>\n\n            <Button variant=\"secondary\" className=\"w-full flex items-center justify-center space-x-2\" onClick={testMqttConnection}>\n              <TestTube className=\"w-4 h-4\" />\n              <span>Test Connection</span>\n            </Button>\n          </div>\n        </DashboardCard>\n\n        {/* MQTT Listener */}\n        <DashboardCard className=\"lg:col-span-2\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <MessageCircle className=\"w-6 h-6 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">MQTT Message Listener</h3>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Controls */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                  Topic to Monitor\n                </label>\n                <Input\n                  type=\"text\"\n                  value={mqttListener.topic}\n                  onChange={(e) => setMqttListener(prev => ({ ...prev, topic: e.target.value }))}\n                  placeholder=\"# (all topics)\"\n                  disabled={mqttListener.isListening}\n                />\n                <p className=\"text-xs text-cyan-200 mt-1\">\n                  Use # for all topics, + for single level wildcard, or specific topic\n                </p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                  Max Messages\n                </label>\n                <select\n                  value={mqttListener.maxMessages}\n                  onChange={(e) => setMqttListener(prev => ({ ...prev, maxMessages: parseInt(e.target.value) }))}\n                  className=\"input\"\n                  disabled={mqttListener.isListening}\n                >\n                  <option value={50}>50 messages</option>\n                  <option value={100}>100 messages</option>\n                  <option value={200}>200 messages</option>\n                  <option value={500}>500 messages</option>\n                </select>\n              </div>\n\n              <div className=\"flex space-x-2\">\n                {!mqttListener.isListening ? (\n                  <Button\n                    variant=\"primary\"\n                    className=\"flex items-center space-x-2 flex-1 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    onClick={startMqttListener}\n                    disabled={!isConnected}\n                  >\n                    <Play className=\"w-4 h-4\" />\n                    <span>Start Listening</span>\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"secondary\"\n                    className=\"flex items-center space-x-2 flex-1\"\n                    onClick={stopMqttListener}\n                  >\n                    <Square className=\"w-4 h-4\" />\n                    <span>Stop Listening</span>\n                  </Button>\n                )}\n                \n                <Button\n                  variant=\"outline\"\n                  onClick={clearMqttMessages}\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  <span>Clear</span>\n                </Button>\n              </div>\n\n              <div className=\"pt-2\">\n                <Button\n                  variant=\"outline\"\n                  className=\"w-full flex items-center justify-center space-x-2 text-sm\"\n                  onClick={testSocketConnection}\n                >\n                  <TestTube className=\"w-4 h-4\" />\n                  <span>Test Socket Connection</span>\n                </Button>\n              </div>\n\n              {/* Connection Status */}\n              <div className=\"pt-2\">\n                <div className=\"flex items-center space-x-2 text-sm\">\n                  <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                  <span className={isConnected ? 'text-green-600' : 'text-red-600'}>\n                    {isConnected ? 'Connected' : 'Disconnected'}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Message Display */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"bg-gray-50 border rounded-lg h-96 overflow-hidden\">\n                <div className=\"p-3 border-b bg-gray-100\">\n                  <h4 className=\"text-sm font-medium text-gray-700\">Received Messages</h4>\n                </div>\n                <div className=\"h-full overflow-y-auto p-3 space-y-2\">\n                  {mqttListener.messages.length === 0 ? (\n                    <div className=\"text-center text-gray-500 mt-8\">\n                      <MessageCircle className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n                      <p>No messages received yet</p>\n                      <p className=\"text-xs\">Start listening to see MQTT messages</p>\n                    </div>\n                  ) : (\n                    mqttListener.messages.map((message) => (\n                      <div key={message.id} className=\"bg-white border rounded p-3 text-sm\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-medium text-gray-900 truncate\">{message.topic}</p>\n                            <p className=\"text-xs text-gray-500\">{message.timestamp}</p>\n                          </div>\n                          <button\n                            onClick={() => copyMessageToClipboard(message)}\n                            className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 flex-shrink-0\"\n                            title=\"Copy to clipboard\"\n                          >\n                            <Copy className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                        <div className=\"bg-gray-50 rounded p-2 overflow-x-auto\">\n                          <pre className=\"text-xs text-gray-700 whitespace-pre-wrap\">\n                            {message.rawPayload}\n                          </pre>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        {/* Notifications */}\n        <DashboardCard>\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <Bell className=\"w-6 h-6 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Notifications</h3>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Email Alerts</p>\n                <p className=\"text-xs text-cyan-200\">Receive email notifications for important events</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={notifications.emailAlerts}\n                  onChange={(e) => setNotifications({ ...notifications, emailAlerts: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Usage Reports</p>\n                <p className=\"text-xs text-cyan-200\">Weekly usage summary reports</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={notifications.usageReports}\n                  onChange={(e) => setNotifications({ ...notifications, usageReports: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Real-time Updates</p>\n                <p className=\"text-xs text-cyan-200\">Live updates via WebSocket</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={notifications.realTimeUpdates}\n                  onChange={(e) => setNotifications({ ...notifications, realTimeUpdates: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n          </div>\n        </DashboardCard>\n\n        {/* System Settings */}\n        <DashboardCard>\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <SettingsIcon className=\"w-6 h-6 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">System Settings</h3>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Auto Refresh Interval (seconds)\n              </label>\n              <select\n                value={systemSettings.autoRefresh}\n                onChange={(e) => setSystemSettings({ ...systemSettings, autoRefresh: parseInt(e.target.value) })}\n                className=\"input\"\n              >\n                <option value={15}>15 seconds</option>\n                <option value={30}>30 seconds</option>\n                <option value={60}>1 minute</option>\n                <option value={300}>5 minutes</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Data Retention (days)\n              </label>\n              <select\n                value={systemSettings.dataRetention}\n                onChange={(e) => setSystemSettings({ ...systemSettings, dataRetention: parseInt(e.target.value) })}\n                className=\"input\"\n              >\n                <option value={30}>30 days</option>\n                <option value={60}>60 days</option>\n                <option value={90}>90 days</option>\n                <option value={365}>1 year</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Automatic Backups</p>\n                <p className=\"text-xs text-cyan-200\">Daily backup of system data</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={systemSettings.backupEnabled}\n                  onChange={(e) => setSystemSettings({ ...systemSettings, backupEnabled: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Debug Mode</p>\n                <p className=\"text-xs text-cyan-200\">Enable detailed logging</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={systemSettings.debugMode}\n                  onChange={(e) => setSystemSettings({ ...systemSettings, debugMode: e.target.checked })}\n                  className=\"sr-only peer\"\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n          </div>\n        </DashboardCard>\n\n        {/* Security */}\n        <DashboardCard>\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <MessageCircle className=\"w-6 h-6 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Security</h3>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Session Timeout (minutes)\n              </label>\n              <select className=\"input\">\n                <option value={15}>15 minutes</option>\n                <option value={30}>30 minutes</option>\n                <option value={60}>1 hour</option>\n                <option value={480}>8 hours</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-cyan-200 mb-1\">\n                Password Policy\n              </label>\n              <select className=\"input\">\n                <option value=\"standard\">Standard (8+ characters)</option>\n                <option value=\"strong\">Strong (12+ characters, symbols)</option>\n                <option value=\"enterprise\">Enterprise (16+ characters, complex)</option>\n              </select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Two-Factor Authentication</p>\n                <p className=\"text-xs text-cyan-200\">Require 2FA for admin access</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-white\">Audit Logging</p>\n                <p className=\"text-xs text-cyan-200\">Log all admin actions</p>\n              </div>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n              </label>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Save Button */}\n      <div className=\"mt-8 flex justify-end\">\n        <Button\n          variant=\"primary\"\n          onClick={handleSave}\n          disabled={loading}\n        >\n          {loading ? (\n            <TestTube className=\"w-4 h-4 animate-spin\" />\n          ) : (\n            <Save className=\"w-4 h-4\" />\n          )}\n          <span>{loading ? 'Saving...' : saved ? 'Saved!' : 'Save Settings'}</span>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}