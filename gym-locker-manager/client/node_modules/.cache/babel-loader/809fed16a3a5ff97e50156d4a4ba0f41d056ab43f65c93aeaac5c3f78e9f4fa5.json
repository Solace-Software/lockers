{"ast":null,"code":"var _jsxFileName = \"/Users/michaelhanna/Documents/DEV/INZAN/gym_lockers/client/src/contexts/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [offlineAlerts, setOfflineAlerts] = useState([]);\n  useEffect(() => {\n    let newSocket = null;\n    const connectSocket = () => {\n      // Clean up existing socket if any\n      if (newSocket) {\n        newSocket.removeAllListeners();\n        newSocket.close();\n      }\n\n      // Create new socket connection\n      newSocket = io('http://localhost:3001', {\n        transports: ['websocket'],\n        reconnectionDelay: 1000,\n        reconnectionDelayMax: 5000,\n        reconnectionAttempts: 10,\n        timeout: 20000,\n        withCredentials: true\n      });\n\n      // Set up event handlers\n      newSocket.on('connect', () => {\n        console.log('Connected to server via Socket.IO');\n        setIsConnected(true);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setIsConnected(false);\n      });\n      newSocket.on('connect_error', error => {\n        console.error('Socket.IO connection error:', error);\n        setIsConnected(false);\n      });\n      newSocket.on('reconnect_attempt', attemptNumber => {\n        console.log(`ðŸ”„ Socket.IO reconnection attempt #${attemptNumber}`);\n      });\n      newSocket.on('reconnect', attemptNumber => {\n        console.log(`Socket.IO reconnected after ${attemptNumber} attempts`);\n        setIsConnected(true);\n      });\n      newSocket.on('reconnect_failed', () => {\n        console.log('Socket.IO reconnection failed after all attempts');\n        // Try to establish a new connection after a delay\n        setTimeout(connectSocket, 5000);\n      });\n\n      // Handle offline locker alerts\n      newSocket.on('lockers-offline', data => {\n        console.log('ðŸ“´ Lockers went offline:', data);\n        const newAlert = {\n          id: Date.now(),\n          type: 'offline',\n          message: `${data.count} locker(s) went offline: ${data.lockers.join(', ')}`,\n          timestamp: new Date()\n        };\n        setOfflineAlerts(prev => [...prev, newAlert]);\n\n        // Auto-remove alert after 10 seconds\n        setTimeout(() => {\n          setOfflineAlerts(prev => prev.filter(alert => alert.id !== newAlert.id));\n        }, 10000);\n      });\n      setSocket(newSocket);\n    };\n\n    // Initial connection\n    connectSocket();\n\n    // Cleanup function\n    return () => {\n      if (newSocket) {\n        console.log('Cleaning up Socket.IO connection...');\n        newSocket.removeAllListeners();\n        newSocket.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      isConnected,\n      offlineAlerts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"8x0I2J33YU/nl3IXmRcYVqrTN58=\");\n_c = SocketProvider;\nexport { SocketContext };\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","isConnected","setIsConnected","offlineAlerts","setOfflineAlerts","newSocket","connectSocket","removeAllListeners","close","transports","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","timeout","withCredentials","on","console","log","error","attemptNumber","setTimeout","data","newAlert","id","Date","now","type","message","count","lockers","join","timestamp","prev","filter","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelhanna/Documents/DEV/INZAN/gym_lockers/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [offlineAlerts, setOfflineAlerts] = useState([]);\n\n  useEffect(() => {\n    let newSocket = null;\n    \n    const connectSocket = () => {\n      // Clean up existing socket if any\n      if (newSocket) {\n        newSocket.removeAllListeners();\n        newSocket.close();\n      }\n\n      // Create new socket connection\n      newSocket = io('http://localhost:3001', {\n        transports: ['websocket'],\n        reconnectionDelay: 1000,\n        reconnectionDelayMax: 5000,\n        reconnectionAttempts: 10,\n        timeout: 20000,\n        withCredentials: true\n    });\n\n      // Set up event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server via Socket.IO');\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n\n    newSocket.on('connect_error', (error) => {\n      console.error('Socket.IO connection error:', error);\n      setIsConnected(false);\n    });\n\n      newSocket.on('reconnect_attempt', (attemptNumber) => {\n        console.log(`ðŸ”„ Socket.IO reconnection attempt #${attemptNumber}`);\n      });\n\n      newSocket.on('reconnect', (attemptNumber) => {\n        console.log(`Socket.IO reconnected after ${attemptNumber} attempts`);\n        setIsConnected(true);\n      });\n\n      newSocket.on('reconnect_failed', () => {\n        console.log('Socket.IO reconnection failed after all attempts');\n        // Try to establish a new connection after a delay\n        setTimeout(connectSocket, 5000);\n      });\n\n      // Handle offline locker alerts\n      newSocket.on('lockers-offline', (data) => {\n        console.log('ðŸ“´ Lockers went offline:', data);\n        const newAlert = {\n          id: Date.now(),\n          type: 'offline',\n          message: `${data.count} locker(s) went offline: ${data.lockers.join(', ')}`,\n          timestamp: new Date()\n        };\n        setOfflineAlerts(prev => [...prev, newAlert]);\n        \n        // Auto-remove alert after 10 seconds\n        setTimeout(() => {\n          setOfflineAlerts(prev => prev.filter(alert => alert.id !== newAlert.id));\n        }, 10000);\n      });\n\n    setSocket(newSocket);\n    };\n\n    // Initial connection\n    connectSocket();\n\n    // Cleanup function\n    return () => {\n      if (newSocket) {\n        console.log('Cleaning up Socket.IO connection...');\n        newSocket.removeAllListeners();\n      newSocket.close();\n      }\n    };\n  }, []);\n\n  return (\n    <SocketContext.Provider value={{ socket, isConnected, offlineAlerts }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { SocketContext }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}