version: '3.8'

services:
  # MariaDB Database
  db:
    image: mariadb:10.11
    container_name: gym-lockers-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_NAME:-gym_lockers}
      MYSQL_USER: ${DB_USER:-gym_admin}
      MYSQL_PASSWORD: ${DB_PASSWORD:-gym_password}
    volumes:
      - db_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
      - ./db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - gym-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Mosquitto MQTT Broker
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: gym-lockers-mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt-config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt-data:/mosquitto/data
      - ./mqtt-logs:/mosquitto/log
    networks:
      - gym-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      timeout: 10s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./gym_lockers
      dockerfile: Dockerfile.backend
    container_name: gym-lockers-backend
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-gym_lockers}
      DB_USER: ${DB_USER:-gym_admin}
      DB_PASSWORD: ${DB_PASSWORD:-gym_password}
      
      # MQTT Configuration
      MQTT_HOST: mqtt
      MQTT_PORT: 1883
      MQTT_USERNAME: ${MQTT_USERNAME:-}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-}
      
      # System Configuration
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      AUTO_REFRESH: ${AUTO_REFRESH:-30}
      DATA_RETENTION: ${DATA_RETENTION:-90}
      DEBUG_MODE: ${DEBUG_MODE:-false}
    ports:
      - "3001:3001"
    volumes:
      - ./gym_lockers:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      mqtt:
        condition: service_healthy
    networks:
      - gym-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/heartbeat"]
      timeout: 10s
      retries: 5

  # Frontend Client (Development)
  frontend:
    build:
      context: ./gym_lockers/client
      dockerfile: Dockerfile.frontend
    container_name: gym-lockers-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./gym_lockers/client:/app
      - /app/node_modules
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_MQTT_WS_URL: ws://localhost:9001
    depends_on:
      - backend
    networks:
      - gym-network
    profiles:
      - dev

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: gym-lockers-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./gym_lockers/client/build:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - gym-network
    profiles:
      - prod

volumes:
  db_data:
    driver: local

networks:
  gym-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
